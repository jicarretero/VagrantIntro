NODES=3
BOX="ubuntu/jammy64"
BASE_IP="192.168.56."


# Generar Key antes de comenzar a levantar las VMs si no existe ya.
if !File.file?("id_rsa") and !File.file?("id_rsa.pub") then
    require 'net/ssh'
    
    key = OpenSSL::PKey::RSA.generate(2048)
    type = key.ssh_type
    data = [ key.to_blob ].pack('m0')
    openssh_format = "#{type} #{data}"
    File.open('id_rsa', 'w') { |file| file.write("#{key}") }
    File.open('id_rsa.pub', 'w') { |file| file.write("#{openssh_format}") }
end

# Ahora ya levantamos las VMs
Vagrant.configure("2") do |config|  #{
  config.vm.box = BOX
  config.vm.provision "shell", :path => "scripts/0_install_software.sh"

  ((NODES-1)..0).step(-1).each do |i| #{
          hostname="hadoop#{i}"
          config.vm.define hostname do |node| #{
              ip="#{BASE_IP}#{i+20}"
              node.vm.box = "ubuntu/jammy64"
              node.vm.network "private_network", ip: ip, nic_type: "virtio"
              node.vm.hostname = hostname

              if i==0 then
                      node.vm.provision :shell, path:"scripts/add_user_master.sh"
              else
                      node.vm.provision :shell, path:"scripts/add_user_nodes.sh"
              end
              node.vm.provision :shell, path:"scripts/create_hadoop_directories.sh"
              node.vm.provision :shell, path:"scripts/set_up_config.sh",
                 env: {
                    "NODES" => NODES,
                    "BASE_IP" => BASE_IP
                 }

              if i==0 then
                      node.vm.provision :shell, path:"scripts/format_hdfs_and_start.sh"
              end
              node.disksize.size = '40GB'
              node.vm.provider :virtualbox do |vb| #{
                  vb.name = hostname
                  vb.memory = "2048"
                  vb.cpus = 2
                  vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
                  vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
              end #}
          end #}
  end #}

end #}

